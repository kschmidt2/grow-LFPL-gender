function drawHighcharts(){Highcharts.chart("chart-container-PROJECT-NAME",{chart:{type:"bar",styledMode:!0,spacingBottom:25,spacingRight:100,spacingLeft:0,spacingTop:20},title:{text:null},data:{googleSpreadsheetKey:"1YOKb5l2VM4aAB2r20N_1aT_1vEajYrP3U-U3A6lZbC0"},plotOptions:{series:{groupPadding:.1}},legend:{align:"right",symbolRadius:0,verticalAlign:"top",x:10,itemMarginTop:-10},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:5},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"}},credits:{enabled:!1},tooltip:{shadow:!1,padding:10},responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-8},tooltip:{enabled:!1}}}]}})}Highcharts.setOptions({lang:{thousandsSep:","}}),"complete"===document.readyState||"interactive"===document.readyState?drawHighcharts():document.addEventListener("DOMContentLoaded",drawHighcharts);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZHJhd0hpZ2hjaGFydHMiLCJIaWdoY2hhcnRzIiwiY2hhcnQiLCJ0eXBlIiwic3R5bGVkTW9kZSIsInNwYWNpbmdCb3R0b20iLCJzcGFjaW5nUmlnaHQiLCJzcGFjaW5nTGVmdCIsInNwYWNpbmdUb3AiLCJ0aXRsZSIsInRleHQiLCJkYXRhIiwiZ29vZ2xlU3ByZWFkc2hlZXRLZXkiLCJwbG90T3B0aW9ucyIsInNlcmllcyIsImdyb3VwUGFkZGluZyIsImxlZ2VuZCIsImFsaWduIiwic3ltYm9sUmFkaXVzIiwidmVydGljYWxBbGlnbiIsIngiLCJpdGVtTWFyZ2luVG9wIiwieEF4aXMiLCJsYWJlbHMiLCJzdHlsZSIsIndoaXRlU3BhY2UiLCJ0aWNrTGVuZ3RoIiwieUF4aXMiLCJ1c2VIVE1MIiwib3ZlcmZsb3ciLCJjcmVkaXRzIiwiZW5hYmxlZCIsInRvb2x0aXAiLCJzaGFkb3ciLCJwYWRkaW5nIiwicmVzcG9uc2l2ZSIsInJ1bGVzIiwiY29uZGl0aW9uIiwibWF4V2lkdGgiLCJjaGFydE9wdGlvbnMiLCJzZXRPcHRpb25zIiwibGFuZyIsInRob3VzYW5kc1NlcCIsImRvY3VtZW50IiwicmVhZHlTdGF0ZSIsImFkZEV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiJBQU9BLFNBQUFBLGlCQUNBQyxXQUFBQyxNQUFBLCtCQUFBLENBQ0FBLE1BQUEsQ0FDQUMsS0FBQSxNQUNBQyxZQUFBLEVBQ0FDLGNBQUEsR0FDQUMsYUFBQSxJQUNBQyxZQUFBLEVBQ0FDLFdBQUEsSUFFQUMsTUFBQSxDQUNBQyxLQUFBLE1BRUFDLEtBQUEsQ0FDQUMscUJBQUEsZ0RBR0FDLFlBQUEsQ0FDQUMsT0FBQSxDQUNBQyxhQUFBLEtBb0JBQyxPQUFBLENBQ0FDLE1BQUEsUUFDQUMsYUFBQSxFQUNBQyxjQUFBLE1BQ0FDLEVBQUEsR0FDQUMsZUFBQSxJQUdBQyxNQUFBLENBQ0FDLE9BQUEsQ0FDQUMsTUFBQSxDQUNBQyxXQUFBLFdBT0FDLFdBQUEsR0FHQUMsTUFBQSxDQUNBbEIsT0FBQSxFQUNBYyxPQUFBLENBQ0FLLFNBQUEsRUFDQUMsU0FBQSxVQVVBQyxRQUFBLENBQ0FDLFNBQUEsR0FFQUMsUUFBQSxDQUNBQyxRQUFBLEVBQ0FDLFFBQUEsSUFLQUMsV0FBQSxDQUNBQyxNQUFBLENBQUEsQ0FDQUMsVUFBQSxDQUNBQyxTQUFBLEtBRUFDLGFBQUEsQ0FDQXJDLE1BQUEsQ0FDQUksYUFBQSxJQUVBVSxPQUFBLENBQ0FDLE1BQUEsT0FDQUcsR0FBQSxHQUVBWSxRQUFBLENBQ0FELFNBQUEsU0F6R0E5QixXQUFBdUMsV0FBQSxDQUNBQyxLQUFBLENBQ0FDLGFBQUEsT0ErR0EsYUFBQUMsU0FBQUMsWUFBQSxnQkFBQUQsU0FBQUMsV0FDQTVDLGlCQUVBMkMsU0FBQUUsaUJBQUEsbUJBQUE3QyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiSGlnaGNoYXJ0cy5zZXRPcHRpb25zKHtcbiAgICBsYW5nOiB7XG4gICAgICB0aG91c2FuZHNTZXA6ICcsJ1xuICAgIH1cbn0pO1xuXG5cbmZ1bmN0aW9uIGRyYXdIaWdoY2hhcnRzKCkge1xuICAgIEhpZ2hjaGFydHMuY2hhcnQoXCJjaGFydC1jb250YWluZXItUFJPSkVDVC1OQU1FXCIsIHsgLy8gYWRkIHRoZSBwcm9wZXIgSUQgaGVyZVxuICAgICAgICBjaGFydDoge1xuICAgICAgICAgICAgdHlwZTogJ2JhcicsXG4gICAgICAgICAgICBzdHlsZWRNb2RlOiB0cnVlLFxuICAgICAgICAgICAgc3BhY2luZ0JvdHRvbTogMjUsXG4gICAgICAgICAgICBzcGFjaW5nUmlnaHQ6IDEwMCxcbiAgICAgICAgICAgIHNwYWNpbmdMZWZ0OiAwLFxuICAgICAgICAgICAgc3BhY2luZ1RvcDogMjBcbiAgICAgICAgfSwgXG4gICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgICB0ZXh0OiBudWxsXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGdvb2dsZVNwcmVhZHNoZWV0S2V5OiAnMVlPS2I1bDJWTTRhQUIycjIwTl8xYVRfMXZFYWpZclAzVS1VM0E2bFpiQzAnLFxuICAgICAgICB9LFxuICAgICAgICAvLyBmb3IgYmFyIGNoYXJ0cyBvbmx5XG4gICAgICAgIHBsb3RPcHRpb25zOiB7XG4gICAgICAgICAgICBzZXJpZXM6IHtcbiAgICAgICAgICAgICAgICBncm91cFBhZGRpbmc6IDAuMVxuICAgICAgICAgICAgfSBcbiAgICAgICAgfSxcbiAgICAgICAgLy8gZm9yIGxpbmUgY2hhcnRzIG9ubHlcbiAgICAgICAgLy8gcGxvdE9wdGlvbnM6IHtcbiAgICAgICAgLy8gICAgIHNlcmllczoge1xuICAgICAgICAvLyAgICAgICAgIGxpbmVXaWR0aDogMSxcbiAgICAgICAgLy8gICAgICAgICAvLyBjbGlwOiBmYWxzZSxcbiAgICAgICAgLy8gICAgICAgICBtYXJrZXI6IHtcbiAgICAgICAgLy8gICAgICAgICAgICAgZW5hYmxlZDogZmFsc2UsXG4gICAgICAgIC8vICAgICAgICAgICAgIHN5bWJvbDogJ2NpcmNsZScsXG4gICAgICAgIC8vICAgICAgICAgICAgIGZpbGxDb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICAvLyAgICAgICAgICAgICBzdGF0ZXM6IHtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgIGhvdmVyOiB7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgZmlsbENvbG9yOiAnI2ZmZmZmZidcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgIH1cbiAgICAgICAgLy8gICAgICAgICAgICAgfVxuICAgICAgICAvLyAgICAgICAgIH1cbiAgICAgICAgLy8gICAgIH1cbiAgICAgICAgLy8gfSxcbiAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgICBhbGlnbjogJ3JpZ2h0JyxcbiAgICAgICAgICAgIHN5bWJvbFJhZGl1czogMCxcbiAgICAgICAgICAgIHZlcnRpY2FsQWxpZ246ICd0b3AnLFxuICAgICAgICAgICAgeDogMTAsXG4gICAgICAgICAgICBpdGVtTWFyZ2luVG9wOiAtMTAsXG4gICAgICAgICAgICAvLyBlbmFibGVkOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB4QXhpczoge1xuICAgICAgICAgICAgbGFiZWxzOiB7XG4gICAgICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICAgICAgd2hpdGVTcGFjZTogJ25vd3JhcCdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIC8vIGVkaXRzIHhBeGlzIHRpY2tzXG4gICAgICAgICAgICAgICAgLy8gZGF0ZVRpbWVMYWJlbEZvcm1hdHM6IHtcbiAgICAgICAgICAgICAgICAvLyAgICAgd2VlazogJyViLiAlZScsXG4gICAgICAgICAgICAgICAgLy8gfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aWNrTGVuZ3RoOiA1LFxuICAgICAgICAgICAgLy8gdGlja0ludGVydmFsOiAyNCAqIDM2MDAgKiAxMDAwICogN1xuICAgICAgICB9LFxuICAgICAgICB5QXhpczoge1xuICAgICAgICAgICAgdGl0bGU6IGZhbHNlLFxuICAgICAgICAgICAgbGFiZWxzOiB7XG4gICAgICAgICAgICAgICAgdXNlSFRNTDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogJ2FsbG93J1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8vIG1pbjogLFxuICAgICAgICAgICAgLy8gbWF4OiAsXG4gICAgICAgICAgICAvLyB0aWNrQW1vdW50OiAsXG4gICAgICAgICAgICAvLyBhZGRzIGNvbW1hcyB0byB0aG91c2FuZHNcbiAgICAgICAgICAgIC8vIGZvcm1hdHRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgLy8gICAgIHJldHVybiBIaWdoY2hhcnRzLm51bWJlckZvcm1hdCh0aGlzLnZhbHVlLDAsJy4nLCcsJyk7XG4gICAgICAgICAgICAvLyB9LFxuICAgICAgICB9LFxuICAgICAgICBjcmVkaXRzOiB7XG4gICAgICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB0b29sdGlwOiB7XG4gICAgICAgICAgICBzaGFkb3c6IGZhbHNlLFxuICAgICAgICAgICAgcGFkZGluZzogMTAsXG4gICAgICAgICAgICAvLyB2YWx1ZVN1ZmZpeDogJycsXG4gICAgICAgICAgICAvLyB2YWx1ZVByZWZpeDogJycsXG4gICAgICAgICAgICAvLyB2YWx1ZURlY2ltYWxzOiAyLFxuICAgICAgICB9LFxuICAgICAgICByZXNwb25zaXZlOiB7XG4gICAgICAgICAgICBydWxlczogW3tcbiAgICAgICAgICAgIGNvbmRpdGlvbjoge1xuICAgICAgICAgICAgICAgIG1heFdpZHRoOiA1MDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGFydE9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICBjaGFydDoge1xuICAgICAgICAgICAgICAgIHNwYWNpbmdSaWdodDogMTBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgICAgICAgICAgICBhbGlnbjogJ2xlZnQnLFxuICAgICAgICAgICAgICAgICAgICB4OiAtOFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdG9vbHRpcDoge1xuICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5pZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2NvbXBsZXRlJyB8fCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnaW50ZXJhY3RpdmUnKSB7XG4gICAgZHJhd0hpZ2hjaGFydHMoKTtcbn0gZWxzZSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZHJhd0hpZ2hjaGFydHMpO1xufSJdfQ==
